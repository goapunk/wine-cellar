{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Wine Cellar","text":"<p>Wine Cellar is a self-hosted wine management app built with Django, designed for wine enthusiasts to track wines, store tasting notes, rate wines, and manage inventory. Whether you're a casual drinker or a connoisseur, this app helps organize your collection.</p> <p> </p>"},{"location":"#features","title":"Features","text":"<ul> <li>Wine Tracking: Record and review wines you've tasted.</li> <li>Inventory Management: Monitor bottle stock levels.</li> <li>Multi-User Support: Host for yourself and your friends.</li> <li>Barcode Scanning: Easy adding and removing known wines by scanning their barcode.</li> <li>Tasting Notes: Save aroma, flavor, and experience details.</li> <li>Wine Ratings: Rate wines to track preferences.</li> <li>Food Pairings: Add recommended food pairings.</li> <li>Self-hosted: Full control over your data.</li> </ul>"},{"location":"#code-contributing","title":"Code &amp; Contributing","text":"<p>You can find the source code for Wine Cellar on  GitHub.</p> <ul> <li>Report Issues: If you encounter any bugs or have suggestions for improvements, feel free to open an issue.</li> <li>Feature Requests: If you have an idea for a new feature, submit a feature request.</li> <li>Chat &amp; Discussion: Join the conversation, ask questions, or chat about wine management at discussions.</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the AGPL-3.0 License.</p>"},{"location":"deployment/","title":"Deployment","text":"<p>The easiest way to run Wine Cellar is by using docker as described below.</p>"},{"location":"deployment/#docker-deployment","title":"Docker Deployment","text":""},{"location":"deployment/#development-demo-mode","title":"Development / Demo Mode","text":"<p>Note</p> <p>Not for production use.</p>"},{"location":"deployment/#steps","title":"Steps:","text":"<ol> <li>Copy the development environment configuration:    <pre><code>cp .env.dev-sample .env.dev\n</code></pre></li> <li>Build the Docker image:    <pre><code>docker build -t wine-cellar-dev .\n</code></pre></li> <li>Start the application:    <pre><code>docker compose up\n</code></pre></li> </ol>"},{"location":"deployment/#production-setup","title":"Production Setup","text":"<p>Note</p> <p>This setup is under development. Proceed with caution.</p> <p>Note</p> <p>When using podman instead of docker you might have to add <code>:z</code> to the volumes to allow sharing them between containers and make SELinux happy.</p>"},{"location":"deployment/#option-1-using-a-reverse-proxy","title":"Option 1: Using a Reverse Proxy","text":"<p>Prerequisites:</p> <ul> <li>A configured reverse proxy.</li> <li>Properly set <code>.env</code> files.</li> </ul>"},{"location":"deployment/#steps_1","title":"Steps:","text":"<ol> <li>Copy and configure environment files:    <pre><code>cp .env.prod.db-sample .env.prod.db\ncp .env.prod-sample .env.prod\n</code></pre></li> <li>Edit <code>.env</code> files with secure credentials.</li> <li>Start the production container:    <pre><code>docker compose -f docker-compose.prod.yml up\n</code></pre></li> <li>Configure your reverse proxy to forward traffic to <code>http://127.0.0.1:8085</code>.</li> </ol>"},{"location":"deployment/#option-2-standalone-deployment-with-letsencrypt","title":"Option 2: Standalone Deployment with Letsencrypt","text":"<p>Prerequisites:</p> <ul> <li>No conflicting web server on ports 80 and 443.</li> <li>Domain name configured in <code>caddy/Caddyfile</code>.</li> <li>Secure <code>.env</code> files.</li> </ul>"},{"location":"deployment/#steps_2","title":"Steps:","text":"<ol> <li>Copy and configure environment files:    <pre><code>cp .env.prod.db-sample .env.prod.db\ncp .env.prod-sample .env.prod\n</code></pre></li> <li>Edit <code>.env</code> files with secure credentials.</li> <li>Update <code>caddy/Caddyfile</code> by replacing <code>:80</code> with your    domain.</li> <li>Start the production container:    <pre><code>docker compose -f docker-compose.prod.full.yml up\n</code></pre></li> </ol>"},{"location":"setup/","title":"Installation &amp; Setup","text":""},{"location":"setup/#prerequisites","title":"Prerequisites","text":"<p>Ensure your system has:</p> <ul> <li>Python 3.x</li> <li>Node.js (v14.x or higher recommended)</li> <li>npm (comes with Node.js)</li> </ul>"},{"location":"setup/#getting-started","title":"Getting Started","text":""},{"location":"setup/#1-clone-the-repository","title":"1. Clone the Repository","text":"<pre><code>git clone https://github.com/the-broke-sommeliers/wine-cellar.git\ncd wine-cellar\n</code></pre>"},{"location":"setup/#2-install-dependencies","title":"2. Install Dependencies","text":"<pre><code>make install\n</code></pre>"},{"location":"setup/#3-run-the-development-server","title":"3. Run the Development Server","text":"<pre><code>make server\n</code></pre> <p>Access the app at <code>http://127.0.0.1:8003/</code>.</p>"},{"location":"setup/#4-watch-for-changes","title":"4. Watch for Changes","text":"<pre><code>make watch\n</code></pre>"},{"location":"setup/#5-create-an-admin-user","title":"5. Create an Admin User","text":"<pre><code>source venv/bin/activate\npython manage.py createsuperuser\n</code></pre>"},{"location":"setup/#6-load-sample-data-optional","title":"6. Load Sample Data (Optional)","text":"<pre><code>make fixtures\n</code></pre>"},{"location":"testing/","title":"Running Tests","text":""},{"location":"testing/#running-the-test-suite","title":"Running the Test Suite","text":"<p>To execute all tests (backend and frontend), use:</p> <pre><code>make test\n</code></pre>"},{"location":"testing/#running-backend-tests","title":"Running Backend Tests","text":"<p>For Django tests, run:</p> <pre><code>python manage.py test\n</code></pre>"},{"location":"testing/#running-frontend-tests","title":"Running Frontend Tests","text":"<p>To run JavaScript-based frontend tests, use:</p> <pre><code>npm test\n</code></pre>"}]}